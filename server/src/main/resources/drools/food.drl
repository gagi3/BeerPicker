package drools;
import rs.beerpicker.server.model.*
import rs.beerpicker.server.service.abstraction.*
import java.util.List
import java.util.ArrayList
import java.util.Arrays
dialect  "mvel"

global java.util.List beers;

// MEATS

rule "turkey"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "turkey")
    then
        //List<Beer> beers = new ArrayList();
        beers.clear();
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.AMBER));
        System.out.println("DARK MALTS, AMBER ALES");
        System.out.println(beers);
end

rule "burger"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "burger")
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.PALE));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.LAGER, BeerStyle.PILSNER));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.WHEAT));
        System.out.println("PALE ALES, PILSNER LAGERS, WHEAT ALES");
        System.out.println(beers);
end

rule "steak"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "steak")
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByType(BeerType.STOUT));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.RED));
        System.out.println("RED ALES, STOUTS");
        System.out.println(beers);
end

rule "pulled pork"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "pulled pork")
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByType(BeerType.STOUT));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.PALE));
        System.out.println("PALE ALES, STOUTS");
        System.out.println(beers);
end

rule "chicken wings"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "chicken wings")
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByType(BeerType.ALE));
        System.out.println("ALES");
        System.out.println(beers);
end

rule "roast chicken"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "roast chicken")
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.AMBER));
        beers.addAll($beerService.findByType(BeerType.LAGER));
        System.out.println("AMBER ALES, LAGERS");
        System.out.println(beers);
end

// CHEESES

rule "soft cheese"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "soft cheese" || name == "cottage cheese" || name == "cream cheese" || name == "ricotta"))
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByStyle(BeerStyle.WHEAT));
        beers.addAll($beerService.findByType(BeerType.LAGER));
        System.out.println("WHEATS, LAGERS");
        System.out.println(beers);
end

rule "curd cheese"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "curd cheese" || name == "mozzarella" || name == "provolone"))
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByStyle(BeerStyle.WHEAT));
        System.out.println("WHEATS");
        System.out.println(beers);
end

rule "spreadable cheese"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "spreadable cheese" || name == "camembert" || name == "brie"))
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByStyle(BeerStyle.PILSNER));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.PALE));
        beers.addAll($beerService.findByType(BeerType.STOUT));
        System.out.println("PILSNERS, PALE ALES, STOUTS");
        System.out.println(beers);
end

rule "washed-rind cheese"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "washed-rind cheese" || name == "gouda" || name == "havarti" || name == "colby" || name == "monterey jack"))
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.AMBER));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.BROWN));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.PALE));
        System.out.println("AMBER ALES, BROWN ALES, PALE ALES");
        System.out.println(beers);
end

rule "semi-hard cheese"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "semi-hard cheese" || name == "cheddar"))
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByStyle(BeerStyle.PILSNER));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.IPA));
        System.out.println("PILSNERS, INDIAN PALE ALES");
        System.out.println(beers);
end

rule "hard cheese"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "hard cheese" || name == "parmesan" || name == "pecorino"))
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByType(BeerType.STOUT));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.STRONG));
        System.out.println("STOUTS, STRONG ALES");
        System.out.println(beers);
end

rule "marbled cheese"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "marbled cheese" || name == "roquefort" || name == "gorgonzola" || name == "blue cheese"))
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByType(BeerType.STOUT));
        beers.addAll($beerService.findByType(BeerType.ALE));
        System.out.println("STOUTS, ALES");
        System.out.println(beers);
end

// SEAFOOD

rule "lobster"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.SEAFOOD && name == "lobster")
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByFlavours(Arrays.asList(BeerFlavour.CITRUS)));
        beers.addAll($beerService.findByStyle(BeerStyle.PILSNER));
        beers.addAll($beerService.findByStyle(BeerStyle.IPA));
        System.out.println("CITRUS, PILSNERS, IPAS");
        System.out.println(beers);
end

rule "mussels"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.SEAFOOD && name == "mussels")
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByStyle(BeerStyle.WHEAT));
        System.out.println("WHEATS");
        System.out.println(beers);
end

rule "oysters"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.SEAFOOD && name == "oysters")
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByType(BeerType.STOUT));
        System.out.println("STOUTS");
        System.out.println(beers);
end

rule "crab"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.SEAFOOD && name == "crab")
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByType(BeerType.STOUT));
        System.out.println("STOUTS");
        System.out.println(beers);
end

rule "clams"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.SEAFOOD && name == "clams")
    then
        //List<Beer> beers = new ArrayList();
        beers.addAll($beerService.findByFlavours(Arrays.asList(BeerFlavour.CITRUS)));
        System.out.println("CITRUS");
        System.out.println(beers);
end

// FISH

rule "salmon"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.FISH && name == "salmon")
    then
        beers.addAll($beerService.findByStyle(BeerStyle.IPA));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.PALE));
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.BROWN));
        beers.addAll($beerService.findByType(BeerType.STOUT));
        System.out.println("IPAS");
end

rule "sushi"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.FISH && name == "sushi")
    then
        beers.addAll($beerService.findByStyle(BeerStyle.IPA));
        beers.addAll($beerService.findByTypeAndStrengthLessThanEqual(BeerType.ALE, 4.5));
        beers.addAll($beerService.findByFlavours(Arrays.asList(BeerFlavour.CITRUS)));
        beers.addAll($beerService.findByStyle(BeerStyle.PILSNER));
        System.out.println("IPAS, LIGHT ALES, CITRUS, PILSNERS");
end

// FRUIT

rule "apple"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.FRUIT && name == "apple")
    then
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.BROWN));
        beers.addAll($beerService.findByFlavours(Arrays.asList(BeerFlavour.CARAMEL)));
        System.out.println("BROWN ALES, CARAMEL");
end

rule "strawberries"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.FRUIT && name == "strawberries")
    then
        beers.addAll($beerService.findByType(BeerType.STOUT));
        System.out.println("STOUT");
end

rule "orange"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.FRUIT && name == "orange")
    then
        beers.addAll($beerService.findByStyle(BeerStyle.WHEAT));
        beers.addAll($beerService.findByFlavours(Arrays.asList(BeerFlavour.CITRUS)));
        System.out.println("WHEAT, CITRUS");
end

// CHOCOLATE

rule "dark chocolate"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.CHOCOLATE && name == "dark chocolate")
    then
        beers.addAll($beerService.findByType(BeerType.STOUT));
        beers.addAll($beerService.findByStyle(BeerStyle.PILSNER));
        beers.addAll($beerService.findByStyle(BeerStyle.WHEAT));
        beers.addAll($beerService.findByFlavours(Arrays.asList(BeerFlavour.CHOCOLATE, BeerFlavour.COFFEE, BeerFlavour.CITRUS)));
        System.out.println("STOUT, PILSNER, WHEAT, CHOCOLATE, COFFEE, CITRUS");
end

rule "milk chocolate"
    agenda-group "food"
    when
        $beerService: BeerService();
        Food(type == FoodType.CHOCOLATE && name == "milk chocolate")
    then
        beers.addAll($beerService.findByTypeAndStyle(BeerType.ALE, BeerStyle.PALE));
        beers.addAll($beerService.findByStyle(BeerStyle.IPA));
        System.out.println("PALE ALES, IPA");
end