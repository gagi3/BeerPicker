package drools;
import rs.beerpicker.server.model.*
import rs.beerpicker.server.service.abstraction.*
import java.util.List
import java.util.ArrayList
import java.util.Arrays
dialect  "mvel"

global java.util.List beers;
global java.util.List recommendations;

// MEATS

rule "turkey"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "turkey")
        $beer: Beer((type != BeerType.ALE && style != BeerStyle.AMBER))
    then
        delete($beer);
end

rule "burger"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "burger")
        $beer: Beer((type != BeerType.ALE && style != BeerStyle.PALE) || (type != BeerType.ALE && style != BeerStyle.WHEAT) || type != BeerType.LAGER)
    then
        delete($beer);
end

rule "steak"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "steak")
        $beer: Beer((type != BeerType.ALE && style != BeerStyle.RED) || type != BeerType.STOUT)
    then
        delete($beer);
end

rule "pulled pork"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "pulled pork")
        $beer: Beer((type != BeerType.ALE && style != BeerStyle.PALE) || type != BeerType.STOUT)
    then
        delete($beer);
end

rule "chicken wings"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "chicken wings")
        $beer: Beer(type != BeerType.ALE)
    then
        delete($beer);
end

rule "roast chicken"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.MEAT && name == "roast chicken")
        $beer: Beer((type != BeerType.ALE && style != BeerStyle.AMBER) || type != BeerType.LAGER)
    then
        delete($beer);
end

// CHEESES

rule "soft cheese"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "soft cheese" || name == "cottage cheese" || name == "cream cheese" || name == "ricotta"))
        $beer: Beer(style != BeerStyle.WHEAT || type != BeerType.LAGER)
    then
        delete($beer);
end

rule "curd cheese"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "curd cheese" || name == "mozzarella" || name == "provolone"))
        $beer: Beer(style != BeerStyle.WHEAT)
    then
        delete($beer);
end

rule "spreadable cheese"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "spreadable cheese" || name == "camembert" || name == "brie"))
        $beer: Beer(style != BeerStyle.PILSNER || (type != BeerType.ALE && style != BeerStyle.PALE) || type != BeerType.STOUT)
    then
        delete($beer);
end

rule "washed-rind cheese"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "washed-rind cheese" || name == "gouda" || name == "havarti" || name == "colby" || name == "monterey jack"))
        $beer: Beer((type != BeerType.ALE && style != BeerStyle.AMBER) || (type != BeerType.ALE && style != BeerStyle.BROWN) || (type != BeerType.ALE && style != BeerStyle.PALE))
    then
        delete($beer);
end

rule "semi-hard cheese"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "semi-hard cheese" || name == "cheddar"))
        $beer: Beer(style != BeerStyle.IPA || style != BeerStyle.PILSNER)
    then
        delete($beer);
end

rule "hard cheese"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "hard cheese" || name == "parmesan" || name == "pecorino"))
        $beer: Beer((type != BeerType.ALE && style != BeerStyle.STRONG) || type != BeerType.STOUT)
    then
        delete($beer);
end

rule "marbled cheese"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.CHEESE && (name == "marbled cheese" || name == "roquefort" || name == "gorgonzola" || name == "blue cheese"))
        $beer: Beer(type != BeerType.ALE || type != BeerType.STOUT)
    then
        delete($beer);
end

// SEAFOOD

rule "lobster"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.SEAFOOD && name == "lobster")
        $beer: Beer(style != BeerStyle.IPA || style != BeerStyle.PILSNER || flavours not contains BeerFlavour.CITRUS)
    then
        delete($beer);
end

rule "mussels"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.SEAFOOD && name == "mussels")
        $beer: Beer(style != BeerStyle.WHEAT)
    then
        delete($beer);
end

rule "oysters"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.SEAFOOD && name == "oysters")
        $beer: Beer(type != BeerType.STOUT)
    then
        delete($beer);
end

rule "crab"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.SEAFOOD && name == "crab")
        $beer: Beer(type != BeerType.STOUT)
    then
        delete($beer);
end

rule "clams"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.SEAFOOD && name == "clams")
        $beer: Beer(flavours not contains BeerFlavour.CITRUS)
    then
        delete($beer);
end

// FISH

rule "salmon"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.FISH && name == "salmon")
        $beer: Beer(style != BeerStyle.IPA || (type != BeerType.ALE && style != BeerStyle.PALE) || (type != BeerType.ALE && style != BeerStyle.BROWN) || type != BeerType.STOUT)
    then
        delete($beer);
end

rule "sushi"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.FISH && name == "sushi")
        $beer: Beer(style != BeerStyle.IPA || (type != BeerType.ALE && strength > 4.5) || flavours not contains BeerFlavour.CITRUS || style != BeerStyle.PILSNER)
    then
        delete($beer);
end

// FRUIT

rule "apple"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.FRUIT && name == "apple")
        $beer: Beer((type != BeerType.ALE && style != BeerStyle.BROWN) || flavours not contains BeerFlavour.CARAMEL)
    then
        delete($beer);
end

rule "strawberries"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.FRUIT && name == "strawberries")
        $beer: Beer(type != BeerType.STOUT);
    then
        delete($beer);
end

rule "orange"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.FRUIT && name == "orange")
        $beer: Beer(style != BeerStyle.WHEAT || flavours not contains BeerFlavour.CITRUS)
    then
        delete($beer);
end

// CHOCOLATE

rule "dark chocolate"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService()
        $beer: Beer(type != BeerType.STOUT);
        Food(type == FoodType.CHOCOLATE && name == "dark chocolate")
    then
        delete($beer);
end

rule "milk chocolate"
    //agenda-group "food"
    salience 3
    when
        $beerService: BeerService();
        Food(type == FoodType.CHOCOLATE && name == "milk chocolate")
        $beer: Beer((type != BeerType.ALE && style != BeerStyle.WHEAT) || flavours not contains BeerFlavour.CITRUS)
    then
        delete($beer);
end
